{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "datasource": "InfluxDB-NetworkTraffic",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": ["value"]
        },
        "pieType": "pie",
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "query": "from(bucket: \"network-traffic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"network_packet\")\n  |> filter(fn: (r) => r._field == \"length\")\n  |> group(columns: [\"protocol\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)",
          "refId": "A"
        }
      ],
      "title": "Protocols Used",
      "type": "piechart"
    },
    {
      "datasource": "InfluxDB-NetworkTraffic",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 2,
      "options": {
        "showHeader": true
      },
      "targets": [
        {
          "query": "from(bucket: \"network-traffic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"network_packet\")\n  |> filter(fn: (r) => r._field == \"length\")\n  |> group(columns: [\"src_ip\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> limit(n: 10)",
          "refId": "A"
        }
      ],
      "title": "Top Source IPs",
      "type": "table"
    },
    {
      "datasource": "InfluxDB-NetworkTraffic",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "query": "from(bucket: \"network-traffic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"network_packet\")\n  |> filter(fn: (r) => r._field == \"length\")\n  |> aggregateWindow(every: 1m, fn: count, createEmpty: false)\n  |> yield(name: \"count\")",
          "refId": "A"
        }
      ],
      "title": "Traffic Over Time",
      "type": "timeseries"
    },
    {
      "datasource": "InfluxDB-NetworkTraffic",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 16
      },
      "id": 4,
      "options": {
        "showHeader": true
      },
      "targets": [
        {
          "query": "from(bucket: \"network-traffic\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"network_packet\")\n  |> filter(fn: (r) => r._field == \"length\")\n  |> group(columns: [\"dst_ip\"])\n  |> count()\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> limit(n: 10)",
          "refId": "A"
        }
      ],
      "title": "Top Destination IPs",
      "type": "table"
    },
    {
      "datasource": "InfluxDB-NetworkTraffic",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 50
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Reputation Score"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 16
      },
      "id": 5,
      "options": {
        "showHeader": true
      },
      "targets": [
        {
          "query": "// This would be populated by the Flask API endpoint for suspicious IPs\n// Placeholder query - actual data comes from enrichment API",
          "refId": "A"
        }
      ],
      "title": "Suspicious IPs",
      "type": "table"
    },
    {
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 0,
        "y": 24
      },
      "id": 6,
      "options": {
        "content": "<div style=\"text-align: center; padding: 20px;\">\n  <h3>Export Data</h3>\n  <p>\n    <a href=\"/api/data/export/csv\" target=\"_blank\" style=\"margin: 5px; padding: 10px; background: #1f77b4; color: white; text-decoration: none; border-radius: 3px;\">Download CSV</a>\n    <a href=\"/api/data/export/json\" target=\"_blank\" style=\"margin: 5px; padding: 10px; background: #ff7f0e; color: white; text-decoration: none; border-radius: 3px;\">Download JSON</a>\n    <a href=\"/api/data/export/pcap\" target=\"_blank\" style=\"margin: 5px; padding: 10px; background: #2ca02c; color: white; text-decoration: none; border-radius: 3px;\">Download PCAP</a>\n  </p>\n</div>",
        "mode": "html"
      },
      "title": "Export Links",
      "type": "text"
    },
    {
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 8,
        "y": 24
      },
      "id": 7,
      "options": {
        "content": "<div style=\"text-align: center; padding: 20px;\">\n  <h3>Refresh Data</h3>\n  <p>\n    <button onclick=\"fetch('/api/refresh/trigger', {method: 'POST'}).then(() => location.reload())\" style=\"padding: 10px 20px; background: #d62728; color: white; border: none; border-radius: 3px; cursor: pointer;\">Refresh Dashboard</button>\n  </p>\n  <p>\n    <button onclick=\"fetch('/api/enrichment/trigger', {method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify({limit: 50})}).then(() => alert('Enrichment triggered'))\" style=\"padding: 10px 20px; background: #9467bd; color: white; border: none; border-radius: 3px; cursor: pointer;\">Enrich IPs</button>\n  </p>\n</div>",
        "mode": "html"
      },
      "title": "Refresh Controls",
      "type": "text"
    },
    {
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 8,
        "x": 16,
        "y": 24
      },
      "id": 8,
      "options": {
        "content": "<div style=\"text-align: center; padding: 20px;\">\n  <h3>System Status</h3>\n  <p id=\"status-info\">Loading...</p>\n  <script>\n    fetch('/api/status')\n      .then(response => response.json())\n      .then(data => {\n        document.getElementById('status-info').innerHTML = \n          `Capturing: ${data.capturing ? 'Active' : 'Stopped'}<br>\n           Packets: ${data.packets_captured}<br>\n           Uptime: ${Math.round(data.uptime)}s`;\n      })\n      .catch(() => {\n        document.getElementById('status-info').innerHTML = 'Status unavailable';\n      });\n  </script>\n</div>",
        "mode": "html"
      },
      "title": "System Status",
      "type": "text"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 27,
  "style": "dark",
  "tags": ["network", "traffic", "security"],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Network Traffic Overview",
  "uid": "network-traffic-overview",
  "version": 1
}

