version: '3.8'

services:
  # InfluxDB for time-series data storage
  influxdb:
    image: influxdb:2.7
    container_name: network-analyzer-influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password123
      - DOCKER_INFLUXDB_INIT_ORG=network-analyzer
      - DOCKER_INFLUXDB_INIT_BUCKET=network-traffic
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=network-analyzer-token-123456789
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - ./config/influxdb.conf:/etc/influxdb2/influxdb.conf:ro
    networks:
      - analyzer-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: network-analyzer-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana:/etc/grafana/provisioning:ro
    depends_on:
      - influxdb
    networks:
      - analyzer-network

  # Network Traffic Analyzer (Python application)
  traffic-analyzer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: network-analyzer-app
    ports:
      - "5000:5000"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=network-analyzer-token-123456789
      - INFLUXDB_ORG=network-analyzer
      - INFLUXDB_BUCKET=network-traffic
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./src:/app/src:ro
      - ./.env:/app/.env:ro
    depends_on:
      - influxdb
    # Use host network mode for packet capture
    network_mode: host
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW

volumes:
  influxdb_data:
  grafana_data:

networks:
  analyzer-network:
    driver: bridge

